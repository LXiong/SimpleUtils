git(分布式版本控制)使用方法

1：下载安装git
	sudo apt-get install git

2：初始化本地仓库
	git init  //此命令将生成一个.git文件

3：初始化添加远程仓库
	git remote add origin https://github.com/username/xxxx.git 

4：配置git信息
	git config --global user.name "yourname"    //添加userName
	git config --global user.email youremail@example.com  //添加userEmail

4.1 下载远程文件
	git clone https://github.com/username/xxxx.git //下载某个git文件的master分支
	git clone -b XXX https://github.com/username/xxxx.git //下载某个git文件的XXX分支

文件操作：

5：添加一个文件
	git add 1.txt

6：查看变更的文件
	git status
 	红色表示修改了未add
 	绿色表示add了但是没有commit

	git diff //查看红色未add的文件修改的部分

7：提交已经修改的文件到本地
	git commit -m '修改的comment'

8：查看git提交的历史纪录

	Change-Id: I69dbf95bdf0179675d665e88d983d66bda9a49ac //表示版本号，用于9恢复

9：版本回退
	git reset --hard XXX
	XXX: HEAD^ 表示回退到上个版本
     	HEAD~100 表示回退到上100个版本
     	I69dbf95bdf0179675d665e88d983d66bda9a49ac 表示回退到8change-id版本

10：工作区与暂存区与分支
  在工作区修改文件并add进入暂存区
  在暂存区提交commit文件并加入分支

11：撤销修改
  如果文件在工作区
	git checkout -- fileName //将文件恢复到上一次commit状态
  如果文件在暂存区
	移除add在暂存区的文件 git reset HEAD filename
	git checkout -- fileName //将文件恢复到上一次commit状态
  如果文件commit到了分支
	git reset --hard XXX 版本回退

12：删除文件
	git rm -f //强制删除某个文件

13：提交修改
	git push origin master //将本地branch文件提交到远程master分支


分支相关

14：查看当前分支
	git branch --all

15: 创建分支
	git branch dev //创建dev本地分支
16：切换分支
	git checkout dev //切换到dev本地分支
17：提交dev分支到远程
	git push origin dev //提交dev分支到远程
18：删除远程分支
	git push origin dev //删除远程dev分支
19: 删除本地分支
	git branch -d dev //删除本地dev分支
20：分支合并
	git checkout master
	git merge dev //将dev分支合并到master